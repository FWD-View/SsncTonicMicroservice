using System.Data.Common;

namespace Tonic.Common.Models;

// OWNER_NAME	VARCHAR2(30)	 	User that initiated the job
// JOB_NAME	VARCHAR2(30)	 	User-supplied name for the job (or the default name generated by the server)
// OPERATION	VARCHAR2(30)	 	Type of job
// JOB_MODE	VARCHAR2(30)	 	Mode of job
// STATE	VARCHAR2(30)	 	Current job state
// DEGREE	NUMBER	 	Number of worker processes performing the operation
// ATTACHED_SESSIONS	NUMBER	 	Number of sessions attached to the job
// DATAPUMP_SESSIONS	NUMBER	 	Number of Data Pump sessions participating in the job
public record DataPumpJob
{
    private readonly string _ownerName;
    private readonly string _jobName;
    private readonly string _operation;
    private readonly string _jobMode;
    public readonly string State;
    private readonly int _degree;
    private readonly int _attachedSessions;
    private readonly int _dataPumpSessions;

    private DataPumpJob(string ownerName, string jobName, string operation, string jobMode, string state, int degree, int attachedSessions, int dataPumpSessions)
    {
        _ownerName = ownerName;
        _jobName = jobName;
        _operation = operation;
        _jobMode = jobMode;
        State = state;
        _degree = degree;
        _attachedSessions = attachedSessions;
        _dataPumpSessions = dataPumpSessions;
    }

    public static DataPumpJob CreateFromReader(DbDataReader reader)
    {
        var ownerName = reader.GetString(0);
        var jobName = reader.GetString(1);
        var operation = reader.GetString(2);
        var jobMode = reader.GetString(3);
        var state = reader.GetString(4);
        var degree = reader.GetInt32(5);
        var attachedSessions = reader.GetInt32(6);
        var dataPumpSessions = reader.GetInt32(7);

        return new DataPumpJob(ownerName, jobName, operation, jobMode, state, degree, attachedSessions,
            dataPumpSessions);
    }

    public override string ToString() => $"{_ownerName}.{_jobName}: \"{_jobMode}\" [\"{State}\"] [{_attachedSessions} sessions] [{_dataPumpSessions} datapump sessions]";
}